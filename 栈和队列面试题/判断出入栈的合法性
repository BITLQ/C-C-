#include<iostream>
#include<cassert>
#include<stack>

using namespace std;

bool check_legal(int Instack[], int Outstack[], int size)
{
	assert(Instack );
	assert(Outstack );

	stack<int> s;

	int i = 0;
	int j = 0;

	s.push (Instack [i]);
	i++;

	while(1)
	{
		while(s.empty() && i<size)
			s.push (Instack[i++]);

		while( s.top () != Outstack [j] && i < size)
		{
			s.push (Instack[i++]);
		}
		if(s.top () == Outstack [j])
		{
			s.pop ();
			j++;
			continue ;
		}

		if((i == j && j == size))
			return true;
		else
			return false;
	}
}

int main()
{
	int Instack[] = {1,23,3,4,5};
	//int Outstack[] = {4,5,3,2,1};
	int Outstack[] = {1,5,3,23,4};

	int sz1 = sizeof(Instack)/sizeof(Instack[0]);
	int sz2 = sizeof(Outstack)/sizeof(Outstack[0]);

	if(sz1 == sz2)
	 cout<<check_legal(Instack,Outstack,sz1 )<<endl;

	system("pause");
	return 0;
}


